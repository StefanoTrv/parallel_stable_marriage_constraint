predicate cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
predicate int_eq_imp(var int: a,var int: b,var bool: r);
array [1..2] of int: X_INTRODUCED_37_ = [1,1];
array [1..3] of int: X_INTRODUCED_39_ = [1,1,-1];
array [1..3] of int: X_INTRODUCED_90_ = [17,30,56];
array [1..5] of int: X_INTRODUCED_93_ = [25,30,66,62,70];
array [1..5] of int: X_INTRODUCED_96_ = [160,50,65,80,100];
array [1..5] of int: X_INTRODUCED_99_ = [40,150,55,78,90];
var 0..464: X_INTRODUCED_0_ ::var_is_introduced ;
var 17..481: X_INTRODUCED_1_ ::var_is_introduced ;
var 47..511: X_INTRODUCED_2_ ::var_is_introduced ;
var 0..511: X_INTRODUCED_3_ ::var_is_introduced ;
var 30..541: X_INTRODUCED_4_ ::var_is_introduced ;
var 85..596: X_INTRODUCED_5_ ::var_is_introduced ;
var 0..445: X_INTRODUCED_6_ ::var_is_introduced ;
var 56..501: X_INTRODUCED_7_ ::var_is_introduced ;
var 126..571: X_INTRODUCED_8_ ::var_is_introduced ;
var 17..25: X_INTRODUCED_9_ ::var_is_introduced ;
var 30..40: X_INTRODUCED_10_ ::var_is_introduced ;
var 150..160: X_INTRODUCED_11_ ::var_is_introduced ;
var 30..50: X_INTRODUCED_12_ ::var_is_introduced ;
var 55..66: X_INTRODUCED_13_ ::var_is_introduced ;
var 65..78: X_INTRODUCED_14_ ::var_is_introduced ;
var 56..62: X_INTRODUCED_15_ ::var_is_introduced ;
var 70..80: X_INTRODUCED_16_ ::var_is_introduced ;
var 90..100: X_INTRODUCED_17_ ::var_is_introduced ;
var bool: X_INTRODUCED_18_:: is_defined_var;
var bool: X_INTRODUCED_19_;
var bool: X_INTRODUCED_20_:: is_defined_var;
var bool: X_INTRODUCED_21_;
var bool: X_INTRODUCED_22_:: is_defined_var;
var bool: X_INTRODUCED_23_;
var bool: X_INTRODUCED_24_:: is_defined_var;
var bool: X_INTRODUCED_25_;
var bool: X_INTRODUCED_26_:: is_defined_var;
var bool: X_INTRODUCED_27_;
var bool: X_INTRODUCED_28_:: is_defined_var;
var bool: X_INTRODUCED_29_;
var bool: X_INTRODUCED_30_:: is_defined_var;
var bool: X_INTRODUCED_31_;
var bool: X_INTRODUCED_32_:: is_defined_var;
var bool: X_INTRODUCED_33_;
var bool: X_INTRODUCED_34_:: is_defined_var;
var bool: X_INTRODUCED_35_;
var 0..661: objective:: output_var;
var 0..1: X_INTRODUCED_63_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_64_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_66_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_67_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_69_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_70_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_72_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_73_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_75_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_76_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_78_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_79_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_81_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_82_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_84_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_85_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_87_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_88_ ::var_is_introduced :: is_defined_var;
array [1..9] of var int: start:: output_array([1..9]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_];
array [1..9] of var int: dur:: output_array([1..9]) = [X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_];
array [1..18] of var bool: b:: output_array([1..18]) = [X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_];
array [1..3] of var int: X_INTRODUCED_91_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_6_];
array [1..3] of var int: X_INTRODUCED_92_ ::var_is_introduced  = [X_INTRODUCED_63_,X_INTRODUCED_72_,X_INTRODUCED_81_];
array [1..5] of var int: X_INTRODUCED_94_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_4_,X_INTRODUCED_6_,X_INTRODUCED_7_];
array [1..5] of var int: X_INTRODUCED_95_ ::var_is_introduced  = [X_INTRODUCED_64_,X_INTRODUCED_66_,X_INTRODUCED_75_,X_INTRODUCED_82_,X_INTRODUCED_84_];
array [1..5] of var int: X_INTRODUCED_97_ ::var_is_introduced  = [X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_5_,X_INTRODUCED_7_,X_INTRODUCED_8_];
array [1..5] of var int: X_INTRODUCED_98_ ::var_is_introduced  = [X_INTRODUCED_69_,X_INTRODUCED_73_,X_INTRODUCED_78_,X_INTRODUCED_85_,X_INTRODUCED_87_];
array [1..5] of var int: X_INTRODUCED_100_ ::var_is_introduced  = [X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_8_];
array [1..5] of var int: X_INTRODUCED_101_ ::var_is_introduced  = [X_INTRODUCED_67_,X_INTRODUCED_70_,X_INTRODUCED_76_,X_INTRODUCED_79_,X_INTRODUCED_88_];
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_0_,X_INTRODUCED_9_,X_INTRODUCED_1_],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_1_,X_INTRODUCED_10_,X_INTRODUCED_2_],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_3_,X_INTRODUCED_12_,X_INTRODUCED_4_],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_4_,X_INTRODUCED_13_,X_INTRODUCED_5_],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_6_,X_INTRODUCED_15_,X_INTRODUCED_7_],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_7_,X_INTRODUCED_16_,X_INTRODUCED_8_],0);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_63_,X_INTRODUCED_64_],1);
constraint array_bool_or([X_INTRODUCED_18_,X_INTRODUCED_19_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_66_,X_INTRODUCED_67_],1);
constraint array_bool_or([X_INTRODUCED_20_,X_INTRODUCED_21_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_69_,X_INTRODUCED_70_],1);
constraint array_bool_or([X_INTRODUCED_22_,X_INTRODUCED_23_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_72_,X_INTRODUCED_73_],1);
constraint array_bool_or([X_INTRODUCED_24_,X_INTRODUCED_25_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_75_,X_INTRODUCED_76_],1);
constraint array_bool_or([X_INTRODUCED_26_,X_INTRODUCED_27_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_78_,X_INTRODUCED_79_],1);
constraint array_bool_or([X_INTRODUCED_28_,X_INTRODUCED_29_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_81_,X_INTRODUCED_82_],1);
constraint array_bool_or([X_INTRODUCED_30_,X_INTRODUCED_31_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_84_,X_INTRODUCED_85_],1);
constraint array_bool_or([X_INTRODUCED_32_,X_INTRODUCED_33_],true);
constraint int_lin_le(X_INTRODUCED_37_,[X_INTRODUCED_87_,X_INTRODUCED_88_],1);
constraint array_bool_or([X_INTRODUCED_34_,X_INTRODUCED_35_],true);
constraint minicpp_cumulative(X_INTRODUCED_91_,X_INTRODUCED_90_,X_INTRODUCED_92_,1);
constraint minicpp_cumulative(X_INTRODUCED_94_,X_INTRODUCED_93_,X_INTRODUCED_95_,1);
constraint minicpp_cumulative(X_INTRODUCED_97_,X_INTRODUCED_96_,X_INTRODUCED_98_,1);
constraint minicpp_cumulative(X_INTRODUCED_100_,X_INTRODUCED_99_,X_INTRODUCED_101_,1);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_2_,X_INTRODUCED_11_,objective],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_5_,X_INTRODUCED_14_,objective],0);
constraint int_lin_le(X_INTRODUCED_39_,[X_INTRODUCED_8_,X_INTRODUCED_17_,objective],0);
constraint bool_not(X_INTRODUCED_19_,X_INTRODUCED_18_):: defines_var(X_INTRODUCED_18_);
constraint bool_not(X_INTRODUCED_21_,X_INTRODUCED_20_):: defines_var(X_INTRODUCED_20_);
constraint bool_not(X_INTRODUCED_23_,X_INTRODUCED_22_):: defines_var(X_INTRODUCED_22_);
constraint bool_not(X_INTRODUCED_25_,X_INTRODUCED_24_):: defines_var(X_INTRODUCED_24_);
constraint bool_not(X_INTRODUCED_27_,X_INTRODUCED_26_):: defines_var(X_INTRODUCED_26_);
constraint bool_not(X_INTRODUCED_29_,X_INTRODUCED_28_):: defines_var(X_INTRODUCED_28_);
constraint bool_not(X_INTRODUCED_31_,X_INTRODUCED_30_):: defines_var(X_INTRODUCED_30_);
constraint bool_not(X_INTRODUCED_33_,X_INTRODUCED_32_):: defines_var(X_INTRODUCED_32_);
constraint bool_not(X_INTRODUCED_35_,X_INTRODUCED_34_):: defines_var(X_INTRODUCED_34_);
constraint int_eq_imp(X_INTRODUCED_14_,65,X_INTRODUCED_28_);
constraint int_eq_imp(X_INTRODUCED_17_,100,X_INTRODUCED_34_);
constraint int_eq_imp(X_INTRODUCED_13_,55,X_INTRODUCED_27_);
constraint int_eq_imp(X_INTRODUCED_15_,56,X_INTRODUCED_30_);
constraint int_eq_imp(X_INTRODUCED_16_,70,X_INTRODUCED_32_);
constraint int_eq_imp(X_INTRODUCED_12_,30,X_INTRODUCED_24_);
constraint int_eq_imp(X_INTRODUCED_10_,30,X_INTRODUCED_20_);
constraint int_eq_imp(X_INTRODUCED_14_,78,X_INTRODUCED_29_);
constraint int_eq_imp(X_INTRODUCED_9_,17,X_INTRODUCED_18_);
constraint int_eq_imp(X_INTRODUCED_16_,80,X_INTRODUCED_33_);
constraint int_eq_imp(X_INTRODUCED_10_,40,X_INTRODUCED_21_);
constraint int_eq_imp(X_INTRODUCED_9_,25,X_INTRODUCED_19_);
constraint int_eq_imp(X_INTRODUCED_11_,160,X_INTRODUCED_22_);
constraint int_eq_imp(X_INTRODUCED_13_,66,X_INTRODUCED_26_);
constraint int_eq_imp(X_INTRODUCED_11_,150,X_INTRODUCED_23_);
constraint int_eq_imp(X_INTRODUCED_15_,62,X_INTRODUCED_31_);
constraint int_eq_imp(X_INTRODUCED_17_,90,X_INTRODUCED_35_);
constraint int_eq_imp(X_INTRODUCED_12_,50,X_INTRODUCED_25_);
constraint bool2int(X_INTRODUCED_18_,X_INTRODUCED_63_):: defines_var(X_INTRODUCED_63_);
constraint bool2int(X_INTRODUCED_19_,X_INTRODUCED_64_):: defines_var(X_INTRODUCED_64_);
constraint bool2int(X_INTRODUCED_20_,X_INTRODUCED_66_):: defines_var(X_INTRODUCED_66_);
constraint bool2int(X_INTRODUCED_21_,X_INTRODUCED_67_):: defines_var(X_INTRODUCED_67_);
constraint bool2int(X_INTRODUCED_22_,X_INTRODUCED_69_):: defines_var(X_INTRODUCED_69_);
constraint bool2int(X_INTRODUCED_23_,X_INTRODUCED_70_):: defines_var(X_INTRODUCED_70_);
constraint bool2int(X_INTRODUCED_24_,X_INTRODUCED_72_):: defines_var(X_INTRODUCED_72_);
constraint bool2int(X_INTRODUCED_25_,X_INTRODUCED_73_):: defines_var(X_INTRODUCED_73_);
constraint bool2int(X_INTRODUCED_26_,X_INTRODUCED_75_):: defines_var(X_INTRODUCED_75_);
constraint bool2int(X_INTRODUCED_27_,X_INTRODUCED_76_):: defines_var(X_INTRODUCED_76_);
constraint bool2int(X_INTRODUCED_28_,X_INTRODUCED_78_):: defines_var(X_INTRODUCED_78_);
constraint bool2int(X_INTRODUCED_29_,X_INTRODUCED_79_):: defines_var(X_INTRODUCED_79_);
constraint bool2int(X_INTRODUCED_30_,X_INTRODUCED_81_):: defines_var(X_INTRODUCED_81_);
constraint bool2int(X_INTRODUCED_31_,X_INTRODUCED_82_):: defines_var(X_INTRODUCED_82_);
constraint bool2int(X_INTRODUCED_32_,X_INTRODUCED_84_):: defines_var(X_INTRODUCED_84_);
constraint bool2int(X_INTRODUCED_33_,X_INTRODUCED_85_):: defines_var(X_INTRODUCED_85_);
constraint bool2int(X_INTRODUCED_34_,X_INTRODUCED_87_):: defines_var(X_INTRODUCED_87_);
constraint bool2int(X_INTRODUCED_35_,X_INTRODUCED_88_):: defines_var(X_INTRODUCED_88_);
solve :: seq_search([int_search(dur,smallest,indomain_min,complete),bool_search(b,input_order,indomain_max,complete),int_search(start,smallest,indomain_min,complete),int_search([objective],input_order,indomain_min,complete)]) minimize objective;
